name: Terraform Plan

on:
  push:
    branches: [main]
    paths:
      - 'infra/**'
  pull_request:
    paths:
      - 'infra/**'
  workflow_dispatch:  # Manual trigger with no inputs required

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: ./infra
  ENVIRONMENT: dev  # Hardcoded to dev environment for full automation

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
      
      - name: Terraform Format Check
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate -no-color
      
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "Planning for environment: dev"
          
          # Generate plan
          terraform plan -no-color -var="environment=dev" -out=tfplan || {
            echo "Plan failed, likely due to existing resources"
            echo "Running with -refresh-only to update state without planning changes"
            terraform plan -refresh-only -no-color -var="environment=dev"
          }
      
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan
          retention-days: 5

      - name: Terraform Show Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform show -no-color tfplan > plan.txt
      
      - name: Upload Plan Text
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-text
          path: ${{ env.TF_WORKING_DIR }}/plan.txt
          retention-days: 5
          
      - name: Post Plan Summary
        if: github.event_name == 'pull_request'
        run: |
          echo "### Terraform Plan Output" >> $GITHUB_STEP_SUMMARY
          echo "```terraform" >> $GITHUB_STEP_SUMMARY
          cat ${{ env.TF_WORKING_DIR }}/plan.txt | head -n 500 >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "Full plan available as an artifact." >> $GITHUB_STEP_SUMMARY
